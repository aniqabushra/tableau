<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20193.19.0821.2225                               -->
<workbook original-version='18.1' source-build='2019.3.0 (20193.19.0821.2225)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (Chapter2OnlineData_Copy3)' inline='true' name='federated.07etjpg1jow89j11sz3eh19oru6n' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Chapter2OnlineData_Copy3' name='excel-direct.19m601g11xm7ph15mfufa1946l95'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='//acgbwpub2v.mc.montgomerycollege.edu/public/tuesdaywork_g2/Chapter2OnlineData_Copy3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.19m601g11xm7ph15mfufa1946l95' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:P1705:no:A1:P1705:0' header='yes' outcome='6'>
            <column datatype='integer' name='Unnamed: 0' ordinal='0' />
            <column datatype='string' name='Country Name' ordinal='1' />
            <column datatype='string' name='Region' ordinal='2' />
            <column datatype='integer' name='Year' ordinal='3' />
            <column datatype='real' name='Life Ladder' ordinal='4' />
            <column datatype='real' name='Log GDP per capita' ordinal='5' />
            <column datatype='real' name='Social support' ordinal='6' />
            <column datatype='real' name='Healthy life expectancy at birth' ordinal='7' />
            <column datatype='real' name='Freedom to make life choices' ordinal='8' />
            <column datatype='real' name='Generosity' ordinal='9' />
            <column datatype='real' name='Perceptions of corruption' ordinal='10' />
            <column datatype='real' name='Positive affect' ordinal='11' />
            <column datatype='real' name='Negative affect' ordinal='12' />
            <column datatype='real' name='Confidence in national government' ordinal='13' />
            <column datatype='real' name='Democratic Quality' ordinal='14' />
            <column datatype='real' name='Delivery Quality' ordinal='15' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Unnamed: 0</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life Ladder</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Life Ladder]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Life Ladder</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Log GDP per capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Log GDP per capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Log GDP per capita</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Social support</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Social support]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Social support</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Healthy life expectancy at birth</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Healthy life expectancy at birth]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Healthy life expectancy at birth</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Freedom to make life choices</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Freedom to make life choices]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Freedom to make life choices</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Generosity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Generosity]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Generosity</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Perceptions of corruption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Perceptions of corruption]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Perceptions of corruption</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Positive affect</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Positive affect]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Positive affect</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Negative affect</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Negative affect]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Negative affect</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confidence in national government</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Confidence in national government]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Confidence in national government</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Democratic Quality</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Democratic Quality]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Democratic Quality</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Delivery Quality</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Delivery Quality]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Delivery Quality</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:P1705:no:A1:P1705:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='real' name='[Confidence in national government]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Delivery Quality]' role='measure' type='quantitative' />
      <column datatype='real' name='[Democratic Quality]' role='measure' type='quantitative' />
      <column datatype='real' name='[Freedom to make life choices]' role='measure' type='quantitative' />
      <column datatype='real' name='[Generosity]' role='measure' type='quantitative' />
      <column datatype='real' name='[Healthy life expectancy at birth]' role='measure' type='quantitative' />
      <column datatype='real' name='[Life Ladder]' role='measure' type='quantitative' />
      <column datatype='real' name='[Log GDP per capita]' role='measure' type='quantitative' />
      <column datatype='real' name='[Negative affect]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Perceptions of corruption]' role='measure' type='quantitative' />
      <column datatype='real' name='[Positive affect]' role='measure' type='quantitative' />
      <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[Region]' role='dimension' type='nominal' />
      <column datatype='real' name='[Social support]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Confidence in national government]' derivation='Avg' name='[avg:Confidence in national government:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Delivery Quality]' derivation='Avg' name='[avg:Delivery Quality:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Democratic Quality]' derivation='Avg' name='[avg:Democratic Quality:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Freedom to make life choices]' derivation='Avg' name='[avg:Freedom to make life choices:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Generosity]' derivation='Avg' name='[avg:Generosity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Healthy life expectancy at birth]' derivation='Avg' name='[avg:Healthy life expectancy at birth:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Life Ladder]' derivation='Avg' name='[avg:Life Ladder:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Log GDP per capita]' derivation='Avg' name='[avg:Log GDP per capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Negative affect]' derivation='Avg' name='[avg:Negative affect:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Perceptions of corruption]' derivation='Avg' name='[avg:Perceptions of corruption:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Positive affect]' derivation='Avg' name='[avg:Positive affect:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Social support]' derivation='Avg' name='[avg:Social support:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Healthy life expectancy at birth]' derivation='Count' name='[cnt:Healthy life expectancy at birth:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Healthy life expectancy at birth]' derivation='Median' name='[med:Healthy life expectancy at birth:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Healthy life expectancy at birth]' derivation='Min' name='[min:Healthy life expectancy at birth:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance aggregation-param='10' column='[Healthy life expectancy at birth]' derivation='Percentile' name='[prc10:Healthy life expectancy at birth:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Confidence in national government]' derivation='Sum' name='[sum:Confidence in national government:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Delivery Quality]' derivation='Sum' name='[sum:Delivery Quality:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Democratic Quality]' derivation='Sum' name='[sum:Democratic Quality:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Freedom to make life choices]' derivation='Sum' name='[sum:Freedom to make life choices:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Generosity]' derivation='Sum' name='[sum:Generosity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Healthy life expectancy at birth]' derivation='Sum' name='[sum:Healthy life expectancy at birth:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Life Ladder]' derivation='Sum' name='[sum:Life Ladder:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Log GDP per capita]' derivation='Sum' name='[sum:Log GDP per capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Negative affect]' derivation='Sum' name='[sum:Negative affect:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Perceptions of corruption]' derivation='Sum' name='[sum:Perceptions of corruption:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Positive affect]' derivation='Sum' name='[sum:Positive affect:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Social support]' derivation='Sum' name='[sum:Social support:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.395522' measure-ordering='alphabetic' measure-percentage='0.604478' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.07etjpg1jow89j11sz3eh19oru6n].[avg:Negative affect:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.07etjpg1jow89j11sz3eh19oru6n].[sum:Negative affect:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.07etjpg1jow89j11sz3eh19oru6n].[avg:Confidence in national government:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.07etjpg1jow89j11sz3eh19oru6n].[avg:Generosity:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.07etjpg1jow89j11sz3eh19oru6n].[sum:Generosity:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.07etjpg1jow89j11sz3eh19oru6n].[avg:Perceptions of corruption:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.07etjpg1jow89j11sz3eh19oru6n].[avg:Healthy life expectancy at birth:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.07etjpg1jow89j11sz3eh19oru6n].[cnt:Healthy life expectancy at birth:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.07etjpg1jow89j11sz3eh19oru6n].[med:Healthy life expectancy at birth:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.07etjpg1jow89j11sz3eh19oru6n].[min:Healthy life expectancy at birth:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.07etjpg1jow89j11sz3eh19oru6n].[prc10:Healthy life expectancy at birth:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.07etjpg1jow89j11sz3eh19oru6n].[sum:Healthy life expectancy at birth:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.07etjpg1jow89j11sz3eh19oru6n].[avg:Delivery Quality:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.07etjpg1jow89j11sz3eh19oru6n].[avg:Life Ladder:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.07etjpg1jow89j11sz3eh19oru6n].[sum:Life Ladder:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.07etjpg1jow89j11sz3eh19oru6n].[avg:Positive affect:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.07etjpg1jow89j11sz3eh19oru6n].[sum:Positive affect:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.07etjpg1jow89j11sz3eh19oru6n].[sum:Confidence in national government:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.07etjpg1jow89j11sz3eh19oru6n].[sum:Delivery Quality:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.07etjpg1jow89j11sz3eh19oru6n].[avg:Log GDP per capita:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.07etjpg1jow89j11sz3eh19oru6n].[sum:Log GDP per capita:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.07etjpg1jow89j11sz3eh19oru6n].[avg:Democratic Quality:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.07etjpg1jow89j11sz3eh19oru6n].[sum:Democratic Quality:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.07etjpg1jow89j11sz3eh19oru6n].[sum:Perceptions of corruption:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.07etjpg1jow89j11sz3eh19oru6n].[avg:Social support:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.07etjpg1jow89j11sz3eh19oru6n].[sum:Social support:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.07etjpg1jow89j11sz3eh19oru6n].[avg:Freedom to make life choices:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.07etjpg1jow89j11sz3eh19oru6n].[sum:Freedom to make life choices:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hong Kong S.A.R. of China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Cyprus&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somaliland region&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taiwan Province of China&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Confidence in internationalgov'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Chapter2OnlineData_Copy3)' name='federated.07etjpg1jow89j11sz3eh19oru6n' />
          </datasources>
          <datasource-dependencies datasource='federated.07etjpg1jow89j11sz3eh19oru6n'>
            <column datatype='real' name='[Confidence in national government]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Life Ladder]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confidence in national government]' derivation='Sum' name='[sum:Confidence in national government:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Life Ladder])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:Country Name:nk]' />
                  <groupfilter function='union'>
                    <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country Name:nk]' to='&quot;Cameroon&quot;' />
                    <groupfilter from='&quot;Central African Republic&quot;' function='range' level='[none:Country Name:nk]' to='&quot;United Kingdom&quot;' />
                    <groupfilter from='&quot;Uruguay&quot;' function='range' level='[none:Country Name:nk]' to='&quot;Zimbabwe&quot;' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#72b966' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07etjpg1jow89j11sz3eh19oru6n].[sum:Confidence in national government:qk]</rows>
        <cols>[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]</cols>
      </table>
      <simple-id uuid='{62544F2E-4AC2-4CD4-A8B5-81C79FFE68D4}' />
    </worksheet>
    <worksheet name='DELIVERY QUALITY'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Chapter2OnlineData_Copy3)' name='federated.07etjpg1jow89j11sz3eh19oru6n' />
          </datasources>
          <datasource-dependencies datasource='federated.07etjpg1jow89j11sz3eh19oru6n'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Delivery Quality]' role='measure' type='quantitative' />
            <column datatype='real' name='[Life Ladder]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Delivery Quality]' derivation='Sum' name='[sum:Delivery Quality:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Life Ladder])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:Country Name:nk]' />
                  <groupfilter function='union'>
                    <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country Name:nk]' to='&quot;Cameroon&quot;' />
                    <groupfilter from='&quot;Central African Republic&quot;' function='range' level='[none:Country Name:nk]' to='&quot;United Kingdom&quot;' />
                    <groupfilter from='&quot;Uruguay&quot;' function='range' level='[none:Country Name:nk]' to='&quot;Zimbabwe&quot;' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07etjpg1jow89j11sz3eh19oru6n].[sum:Delivery Quality:qk]</rows>
        <cols>[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]</cols>
      </table>
      <simple-id uuid='{897C348E-DB63-4EDD-A6EC-4610C74AE1E6}' />
    </worksheet>
    <worksheet name='Perception of corruption'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Chapter2OnlineData_Copy3)' name='federated.07etjpg1jow89j11sz3eh19oru6n' />
          </datasources>
          <datasource-dependencies datasource='federated.07etjpg1jow89j11sz3eh19oru6n'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Life Ladder]' role='measure' type='quantitative' />
            <column datatype='real' name='[Perceptions of corruption]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Perceptions of corruption]' derivation='Sum' name='[sum:Perceptions of corruption:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Life Ladder])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:Country Name:nk]' />
                  <groupfilter function='union'>
                    <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country Name:nk]' to='&quot;Cameroon&quot;' />
                    <groupfilter from='&quot;Central African Republic&quot;' function='range' level='[none:Country Name:nk]' to='&quot;United Kingdom&quot;' />
                    <groupfilter from='&quot;Uruguay&quot;' function='range' level='[none:Country Name:nk]' to='&quot;Zimbabwe&quot;' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#d3b348' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07etjpg1jow89j11sz3eh19oru6n].[sum:Perceptions of corruption:qk]</rows>
        <cols>[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]</cols>
      </table>
      <simple-id uuid='{F86AF12E-5337-4F21-9EB6-0B70EBE03EF9}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0ECAD3E0-F23C-4F36-960D-B286F51C27EB}' />
    </worksheet>
    <worksheet name='country name vs lifeladder'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Chapter2OnlineData_Copy3)' name='federated.07etjpg1jow89j11sz3eh19oru6n' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.07etjpg1jow89j11sz3eh19oru6n'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Life Ladder]' role='measure' type='quantitative' />
            <column-instance column='[Life Ladder]' derivation='Avg' name='[avg:Life Ladder:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]'>
            <groupfilter function='level-members' level='[none:Country Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.07etjpg1jow89j11sz3eh19oru6n].[Longitude (generated)]' field-type='quantitative' max='21045760.060082834' min='-14118563.611351226' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.07etjpg1jow89j11sz3eh19oru6n].[Latitude (generated)]' field-type='quantitative' max='14925214.10898673' min='-5426300.1075760564' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.07etjpg1jow89j11sz3eh19oru6n].[avg:Life Ladder:qk]' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#e15759' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]' />
              <color column='[federated.07etjpg1jow89j11sz3eh19oru6n].[avg:Life Ladder:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3073480129241943' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07etjpg1jow89j11sz3eh19oru6n].[Latitude (generated)]</rows>
        <cols>[federated.07etjpg1jow89j11sz3eh19oru6n].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{86291B1D-BF8C-4952-AC18-DA79E58EF824}' />
    </worksheet>
    <worksheet name='coutries with regions'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Chapter2OnlineData_Copy3)' name='federated.07etjpg1jow89j11sz3eh19oru6n' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.07etjpg1jow89j11sz3eh19oru6n'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Life Ladder]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Life Ladder]' derivation='Avg' name='[avg:Life Ladder:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='Max' name='[max:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country Name:nk]' />
              <groupfilter function='empty-level' member='[none:Country Name:nk]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.07etjpg1jow89j11sz3eh19oru6n].[Longitude (generated)]' field-type='quantitative' max='37818073.631430887' min='-39732386.333938032' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.07etjpg1jow89j11sz3eh19oru6n].[Latitude (generated)]' field-type='quantitative' max='23467409.389609654' min='-21415276.347022437' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]' />
              <lod column='[federated.07etjpg1jow89j11sz3eh19oru6n].[avg:Life Ladder:qk]' />
              <lod column='[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Region:nk]' />
              <geometry column='[federated.07etjpg1jow89j11sz3eh19oru6n].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.07etjpg1jow89j11sz3eh19oru6n].[Latitude (generated)]</rows>
        <cols>[federated.07etjpg1jow89j11sz3eh19oru6n].[Longitude (generated)]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Country Name: </run>
              <run bold='true'>&lt;[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]&gt;</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Avg. Life Ladder: </run>
              <run bold='true'>&lt;[federated.07etjpg1jow89j11sz3eh19oru6n].[avg:Life Ladder:qk]&gt;</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Max. Region: </run>
              <run bold='true'>&lt;[federated.07etjpg1jow89j11sz3eh19oru6n].[max:Region:nk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.07etjpg1jow89j11sz3eh19oru6n].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.07etjpg1jow89j11sz3eh19oru6n].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.07etjpg1jow89j11sz3eh19oru6n].[avg:Life Ladder:qk]</field>
                      <field>[federated.07etjpg1jow89j11sz3eh19oru6n].[max:Region:nk]</field>
                      <field>[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]</field>
                      <field>[federated.07etjpg1jow89j11sz3eh19oru6n].[Geometry (generated)]</field>
                      <field>[federated.07etjpg1jow89j11sz3eh19oru6n].[Latitude (generated)]</field>
                      <field>[federated.07etjpg1jow89j11sz3eh19oru6n].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>7.6920720247121954</value>
                    <value>&quot;Europe &amp; Central Asia&quot;</value>
                    <value>&quot;Denmark&quot;</value>
                    <value>&quot;MULTIPOLYGON(((14.701 55.1181,14.7032 55.2001,14.7231 55.2384,14.7773 55.2909,14.8245 55.2528,14.9436 55.2097,14.9689 55.2152,15.0208 55.1766,15.1007 55.1489,15.1451 55.1409,15.1568 55.0823,15.1128 55.0323,15.1204 55.0144,15.0767 54.987,14.963 55.0038,14.8842 55.0323,14.7768 55.0524,14.689 55.0925,14.701 55.1181)),((12.7697 55.6718,12.7935 55.6119,12.7676 55.6057,12.7338 55.6359,12.7459 55.6672,12.7697 55.6718)),((12.513 55.6138,12.5545 55.6437,12.5798 55.67,12.6294 55.6975,12.642 55.6512,12.6758 55.6328,12.6801 55.5887,12.5916 55.5548,12.5379 55.5727,12.513 55.6138)),((11.7246 55.1823,11.7074 55.2029,11.6721 55.2006,11.6384 55.1769,11.5973 55.19,11.5163 55.1978,11.4553 55.217,11.4585 55.1876,11.4165 55.2029,11.3785 55.1988,11.2577 55.2012,11.2376 55.2204,11.2449 55.2629,11.2349 55.2863,11.1805 55.3055,11.2052 55.3447,11.1651 55.3544,11.1409 55.3315,11.0939 55.3519,11.113 55.3701,11.1524 55.3682,11.2022 55.3828,11.1949 55.4191,11.2033 55.4493,11.1738 55.497,11.1278 55.526,11.1577 55.5593,11.15 55.5864,11.0673 55.6611,11.0701 55.678,10.9683 55.7296,10.9281 55.7268,10.9241 55.7495,10.9863 55.7465,11.0444 55.7317,11.081 55.7351,11.1283 55.7522,11.1757 55.7547,11.1967 55.7319,11.2169 55.7466,11.2517 55.7311,11.2966 55.7542,11.3493 55.7575,11.3826 55.788,11.3773 55.8203,11.451 55.8481,11.5044 55.8543,11.5313 55.8888,11.5226 55.9267,11.4614 55.9491,11.3763 55.9533,11.2914 55.9799,11.2973 55.9925,11.3793 55.9681,11.4839 55.9603,11.5147 55.9519,11.592 55.9617,11.632 55.9391,11.6998 55.9481,11.7769 55.9771,11.791 55.9574,11.7548 55.9406,11.7529 55.9061,11.7336 55.8988,11.6806 55.915,11.666 55.8897,11.7088 55.8612,11.7349 55.8242,11.7148 55.8062,11.6595 55.8158,11.6509 55.773,11.7324 55.7964,11.7924 55.7129,11.7896 55.6818,11.8108 55.6651,11.8369 55.6835,11.8597 55.7356,11.8644 55.7964,11.8778 55.814,11.9348 55.8185,11.9601 55.8507,11.9019 55.9184,11.908 55.9362,11.9643 55.9296,12.0262 55.9004,11.9975 55.8633,12.0305 55.8508,12.0672 55.7666,12.0597 55.7329,12.0276 55.7284,11.9908 55.7406,11.9829 55.6952,12.0444 55.6902,12.0802 55.65,12.1018 55.7107,12.0897 55.7808,12.0627 55.8282,12.0651 55.8791,12.0394 55.9297,11.9953 55.9669,11.8905 55.9417,11.8545 55.9451,11.8548 55.9767,12.0091 56.0311,12.0616 56.0586,12.1828 56.1094,12.3107 56.1298,12.3804 56.1035,12.4983 56.0914,12.5394 56.0801,12.6106 56.0422,12.597 56.0129,12.5486 55.977,12.5174 55.9201,12.5746 55.8431,12.5772 55.8118,12.6027 55.7616,12.5994 55.6883,12.5489 55.642,12.5066 55.6358,12.4919 55.6011,12.405 55.6122,12.2958 55.5744,12.2549 55.5536,12.2091 55.5086,12.1975 55.4477,12.2163 55.4275,12.3031 55.4007,12.3774 55.3913,12.4448 55.3477,12.4523 55.2847,12.3575 55.2378,12.2484 55.2385,12.1603 55.2141,12.1074 55.1736,12.112 55.1408,12.0778 55.1372,12.0917 55.1772,12.0287 55.1649,12.0505 55.1219,12.1285 55.1317,12.1818 55.114,12.1534 55.0758,12.1156 55.0685,12.1709 55.0042,12.1213 54.995,12.05 54.9626,12.0024 54.968,11.9542 54.9965,11.9123 55.005,11.8964 54.9947,11.8189 55.0325,11.8092 55.0718,11.7608 55.0767,11.7201 55.1129,11.7601 55.1189,11.8089 55.1501,11.7166 55.1561,11.7246 55.1823)),((12.147 54.9431,12.1478 54.9692,12.2066 54.9667,12.2733 54.9842,12.2775 55.0227,12.3163 55.0277,12.4615 55.023,12.5219 55.0078,12.5471 54.9805,12.5408 54.9463,12.5093 54.9434,12.3854 54.9654,12.3312 54.9581,12.2824 54.9377,12.2067 54.8815,12.1427 54.881,12.1098 54.917,12.147 54.9431)),((11.744 54.9032,11.7436 54.9606,11.7703 54.9614,11.8045 54.9371,11.8256 54.968,11.8781 54.9437,11.8893 54.9225,11.9671 54.9389,12.0038 54.8958,12.1208 54.8868,12.1567 54.847,12.1165 54.8002,12.0808 54.7884,12.015 54.722,11.9799 54.7021,11.9612 54.6483,11.9705 54.5594,11.918 54.5746,11.9105 54.6095,11.8726 54.6457,11.878 54.6885,11.9107 54.7143,11.8699 54.7268,11.884 54.7481,11.8305 54.7968,11.8143 54.8322,11.7837 54.8537,11.7552 54.8554,11.744 54.9032)),((11.9957 54.9557,12.0087 54.9342,12.0692 54.9383,12.0729 54.9081,12.0143 54.9186,11.9957 54.9557)),((10.9858 54.7822,11.0134 54.8075,11.0703 54.7995,11.1122 54.8246,11.0335 54.8701,11.0156 54.8888,11.0275 54.9131,11.0843 54.9425,11.178 54.9603,11.2686 54.956,11.3193 54.924,11.3598 54.9158,11.3639 54.8949,11.4267 54.8656,11.4688 54.859,11.4918 54.8312,11.5628 54.8239,11.5838 54.8574,11.6156 54.8492,11.6518 54.859,11.6591 54.9014,11.7373 54.8584,11.7496 54.8393,11.7896 54.8319,11.7823 54.8067,11.8521 54.773,11.8667 54.7387,11.8249 54.732,11.8183 54.7032,11.8524 54.6752,11.7989 54.6434,11.711 54.652,11.688 54.6646,11.5609 54.6591,11.5436 54.64,11.4971 54.6354,11.4599 54.6092,11.3453 54.654,11.2636 54.7019,11.0074 54.7618,10.9858 54.7822)),((11.6505 56.7378,11.5794 56.6905,11.5345 56.6921,11.5368 56.726,11.5715 56.7237,11.6505 56.7378)),((11.5189 54.9916,11.5677 54.9726,11.5385 54.9469,11.5189 54.9916)),((11.4201 54.9647,11.4019 54.9211,11.3814 54.9555,11.4201 54.9647)),((11.1746 55.2508,11.2067 55.199,11.1745 55.1986,11.1746 55.2508)),((10.9842 57.2183,10.9431 57.2444,10.8775 57.2524,10.9306 57.2991,11.0096 57.3062,11.0276 57.3183,11.1006 57.3183,11.1452 57.3282,11.1824 57.3017,11.1132 57.2974,11.0912 57.2605,11.0596 57.2342,10.9842 57.2183)),((10.6585 54.7974,10.647 54.8302,10.6689 54.8778,10.7021 54.8705,10.7114 54.8933,10.6754 54.9107,10.7241 54.9543,10.7709 54.9828,10.8088 54.9945,10.8478 55.036,10.8764 55.1021,10.9012 55.1383,10.9393 55.1647,10.9557 55.1463,10.9357 55.0826,10.8883 54.9877,10.8329 54.935,10.8102 54.8795,10.782 54.8394,10.7331 54.7411,10.6934 54.7219,10.6585 54.7974)),((9.4205 54.832,9.3826 54.8393,9.3419 54.8044,9.2503 54.81,9.2399 54.8502,9.138 54.8741,9.0484 54.8722,8.9476 54.9026,8.8922 54.905,8.8601 54.897,8.8327 54.9066,8.7278 54.8927,8.6884 54.9086,8.6375 54.9115,8.6587 54.9875,8.6339 55.0321,8.6462 55.0895,8.6859 55.144,8.5588 55.1504,8.5367 55.066,8.5095 55.058,8.4625 55.0971,8.4874 55.1943,8.519 55.2118,8.5937 55.1875,8.5675 55.1536,8.6131 55.1486,8.6845 55.1586,8.6654 55.2223,8.6611 55.2652,8.6425 55.3097,8.6702 55.3283,8.6203 55.4281,8.5409 55.4554,8.4551 55.4534,8.2936 55.5662,8.271 55.5957,8.2373 55.554,8.2545 55.5254,8.3057 55.4964,8.2935 55.4768,8.2092 55.5194,8.0771 55.5573,8.1602 55.7119,8.1767 55.7726,8.1444 55.9402,8.1719 55.9499,8.1677 55.906,8.1837 55.8826,8.2267 55.8964,8.2696 55.8424,8.3775 55.9008,8.3759 55.9425,8.3151 55.9916,8.2989 56.0609,8.2303 56.0928,8.1395 56.1048,8.1236 56.0355,8.0973 56.055,8.1275 56.2051,8.123 56.2967,8.1315 56.3279,8.1657 56.3368,8.2071 56.3202,8.2384 56.3214,8.2521 56.288,8.2937 56.3169,8.2444 56.3508,8.1875 56.3786,8.1679 56.4002,8.1653 56.4332,8.1246 56.4337,8.1362 56.3852,8.1167 56.3794,8.1229 56.4481,8.1165 56.513,8.1233 56.5582,8.1707 56.663,8.2126 56.7088,8.2223 56.6864,8.1866 56.6328,8.2234 56.619,8.3076 56.5717,8.3881 56.579,8.524 56.5432,8.5583 56.566,8.5974 56.5228,8.6119 56.4852,8.6374 56.4694,8.7264 56.4775,8.7428 56.4923,8.7345 56.5303,8.7618 56.5526,8.7008 56.5866,8.6893 56.6277,8.7291 56.6242,8.7737 56.654,8.8133 56.6945,8.8364 56.6869,8.8596 56.7119,8.8538 56.7434,8.9263 56.7876,8.9638 56.8018,9.0319 56.7844,9.0676 56.8025,9.1108 56.7871,9.1187 56.7564,9.1747 56.7117,9.0954 56.6651,9.0581 56.6302,9.0449 56.5854,9.0579 56.5566,9.0955 56.574,9.0952 56.603,9.1412 56.602,9.1527 56.6175,9.2089 56.6298,9.2848 56.622,9.2617 56.5916,9.2615 56.555,9.3069 56.5253,9.366 56.5416,9.3713 56.5669,9.2951 56.5538,9.2947 56.5933,9.3253 56.6587,9.3052 56.6925,9.279 56.6988,9.1808 56.6655,9.1606 56.6825,9.2302 56.7253,9.2406 56.7559,9.1988 56.7679,9.1685 56.8062,9.2083 56.8422,9.207 56.8672,9.1663 56.8863,9.1776 56.9169,9.2424 56.9669,9.2771 56.9727,9.293 56.9973,9.4191 57.0166,9.5007 57.0148,9.5836 56.9878,9.5378 56.9558,9.571 56.9261,9.5775 56.9605,9.6197 56.9697,9.6977 57.0408,9.778 57.0525,9.8343 57.0445,9.9027 57.0571,9.9341 57.0487,9.9982 57.0784,10.1304 57.013,10.1913 56.9873,10.2322 56.9789,10.3007 56.9827,10.2733 56.9396,10.262 56.8936,10.2765 56.8026,10.3292 56.7053,10.2196 56.7197,10.1823 56.7031,10.2048 56.6818,10.254 56.6985,10.3095 56.7011,10.3518 56.694,10.3631 56.6618,10.3434 56.6231,10.2989 56.6094,10.2218 56.5551,10.225 56.514,10.2075 56.4733,10.2308 56.4844,10.2314 56.5449,10.3031 56.5928,10.3441 56.5948,10.3583 56.5638,10.4276 56.5252,10.5068 56.5131,10.627 56.5248,10.796 56.5372,10.8617 56.5177,10.8725 56.4922,10.9502 56.4563,10.928 56.4252,10.9145 56.3435,10.8639 56.3001,10.8338 56.2872,10.8112 56.257,10.7538 56.2329,10.7358 56.2125,10.7339 56.1684,10.7141 56.1419,10.6892 56.1414,10.6471 56.1679,10.6764 56.2093,10.6555 56.2258,10.6015 56.2264,10.5359 56.1739,10.5589 56.1243,10.5456 56.1024,10.511 56.0958,10.4812 56.1394,10.5175 56.1454,10.5289 56.1645,10.469 56.1801,10.4192 56.1625,10.3884 56.1636,10.376 56.2005,10.4065 56.2075,10.466 56.1993,10.4743 56.244,10.5051 56.2747,10.4566 56.2935,10.3964 56.2926,10.3788 56.271,10.3459 56.2629,10.339 56.236,10.3029 56.224,10.2808 56.2,10.2229 56.1696,10.2517 56.1495,10.2279 56.1198,10.2713 56.0481,10.273 56.0162,10.255 55.995,10.2662 55.9597,10.2477 55.9106,10.2047 55.8857,10.1929 55.8369,10.1168 55.8672,10.0865 55.884,10.0108 55.876,9.9747 55.88,9.9623 55.8655,9.9162 55.8579,9.8976 55.8663,9.8612 55.8477,9.9827 55.8272,10.0484 55.8242,10.0659 55.8081,10.0162 55.7755,10.0538 55.7456,9.9966 55.6997,9.9141 55.6921,9.8228 55.669,9.7866 55.6814,9.7467 55.6805,9.7151 55.7028,9.6721 55.7122,9.5861 55.7061,9.5889 55.69,9.6662 55.6929,9.7066 55.6651,9.7343 55.6603,9.7499 55.6278,9.8071 55.6283,9.7953 55.5949,9.7677 55.5559,9.7286 55.5517,9.7405 55.5186,9.6659 55.5238,9.6259 55.4986,9.6934 55.4616,9.6385 55.4315,9.5928 55.4188,9.622 55.3909,9.613 55.3699,9.6504 55.3284,9.6456 55.3113,9.6671 55.2771,9.7159 55.2587,9.7105 55.233,9.6778 55.2178,9.6933 55.1948,9.6378 55.1752,9.5897 55.1934,9.4969 55.1529,9.519 55.1093,9.5505 55.0752,9.5015 55.0466,9.4658 55.0483,9.4249 55.0249,9.4923 55.0149,9.5822 55.0441,9.63 55.0102,9.6934 54.988,9.7381 54.9874,9.7914 54.9687,9.8203 54.9417,9.8489 54.9682,9.7834 54.9838,9.7875 55.0116,9.7009 55.0066,9.6438 55.0391,9.6407 55.0522,9.6993 55.0775,9.7551 55.0833,9.8213 55.0618,9.9048 55.0189,9.9492 55.0132,9.9965 54.9845,10.0414 54.9345,10.0713 54.877,10.0199 54.872,9.9602 54.8524,9.8913 54.8649,9.7915 54.9025,9.757 54.8972,9.7524 54.8401,9.7272 54.8348,9.7064 54.8524,9.6467 54.8575,9.6567 54.881,9.6052 54.9102,9.581 54.9046,9.5569 54.8762,9.5239 54.8768,9.4623 54.8392,9.4205 54.832)),((10.3976 55.4284,10.4249 55.4386,10.4749 55.4389,10.543 55.4779,10.5519 55.4714,10.6242 55.4871,10.6208 55.5457,10.635 55.5672,10.619 55.6179,10.7054 55.5389,10.7206 55.5042,10.713 55.4758,10.6672 55.4503,10.7633 55.3881,10.8221 55.3082,10.793 55.3097,10.7876 55.2733,10.8153 55.2313,10.8003 55.1705,10.7696 55.1011,10.7436 55.0687,10.6494 55.0562,10.6175 55.0617,10.5188 55.0268,10.4709 55.0423,10.4154 55.0395,10.3681 55.0639,10.32 55.0541,10.2741 55.0845,10.2295 55.0785,10.2063 55.0595,10.1855 55.0789,10.1277 55.0904,10.0801 55.0759,10.089 55.1088,10.1561 55.1218,10.1628 55.1324,10.1165 55.186,10.0478 55.1775,9.9867 55.1882,9.9648 55.2189,9.928 55.2192,9.893 55.243,9.8808 55.2663,9.893 55.3054,9.875 55.3569,9.8295 55.3521,9.826 55.4236,9.7967 55.4586,9.7408 55.4756,9.7269 55.494,9.7674 55.5358,9.8346 55.5548,9.872 55.5121,9.9398 55.5119,10.0234 55.5461,10.1173 55.5785,10.2077 55.5992,10.3041 55.6088,10.3244 55.62,10.4196 55.5873,10.515 55.5414,10.4442 55.4797,10.4211 55.4394,10.3976 55.4284)),((10.5289 54.9953,10.5315 55.0082,10.6252 55.0543,10.6561 55.0338,10.6236 54.9889,10.6562 54.9785,10.6201 54.9482,10.5501 54.9622,10.5289 54.9953)),((10.5914 55.9384,10.6317 55.9189,10.6178 55.8919,10.6462 55.8747,10.6457 55.8089,10.6217 55.7649,10.5504 55.7694,10.5294 55.7912,10.5304 55.8526,10.5771 55.8653,10.6007 55.9065,10.5876 55.925,10.5375 55.9363,10.5223 55.979,10.5627 56.0017,10.5717 55.9608,10.5914 55.9384)),((8.2456 56.8146,8.2668 56.8514,8.3629 56.961,8.4044 56.9798,8.4775 57.0449,8.4944 57.044,8.5509 57.0813,8.584 57.1144,8.6209 57.1266,8.7542 57.0987,8.8791 57.1216,8.9738 57.1574,9.03 57.1586,9.103 57.1433,9.1926 57.1384,9.2804 57.145,9.4021 57.1648,9.5296 57.2196,9.6382 57.3062,9.7305 57.3958,9.7945 57.476,9.8847 57.5309,9.9302 57.5774,9.9583 57.5959,10.0023 57.5906,10.1249 57.5891,10.1765 57.596,10.3201 57.6349,10.5237 57.7306,10.5865 57.7501,10.5985 57.7179,10.5617 57.7089,10.5141 57.6803,10.4621 57.6393,10.4299 57.5986,10.4273 57.5713,10.4485 57.5338,10.5096 57.4915,10.5466 57.4505,10.527 57.429,10.5184 57.3573,10.5462 57.2729,10.546 57.2239,10.4781 57.1966,10.4423 57.1701,10.4025 57.1204,10.369 57.0377,10.3309 56.9887,10.2998 56.9941,10.2577 56.9862,10.2019 56.9976,10.0939 57.0535,10.0036 57.0896,9.9713 57.0804,9.9355 57.0536,9.8737 57.0699,9.8423 57.0873,9.7804 57.1052,9.7592 57.0721,9.7017 57.0617,9.6424 57.0682,9.5762 57.0409,9.4881 57.0459,9.3608 57.0244,9.2667 56.9942,9.2292 56.9916,9.1352 57.0408,9.0338 57.0084,9.0226 57.0231,8.933 57.0038,8.9028 56.9738,8.8894 56.9913,8.8518 56.996,8.8467 56.9732,8.7619 56.9464,8.6675 56.9503,8.627 56.8843,8.633 56.8646,8.5732 56.8182,8.534 56.8173,8.4706 56.7828,8.4993 56.7563,8.4712 56.7137,8.5152 56.7143,8.5141 56.6799,8.583 56.691,8.57 56.6545,8.597 56.6242,8.5876 56.6009,8.5148 56.5896,8.4829 56.6342,8.426 56.6647,8.3551 56.6773,8.3162 56.7158,8.3024 56.7536,8.2539 56.7761,8.2501 56.7088,8.2234 56.7305,8.2274 56.7808,8.2456 56.8146)),((10.2441 54.9229,10.283 54.9396,10.3422 54.8976,10.3791 54.8845,10.4059 54.8955,10.4482 54.8623,10.4733 54.885,10.522 54.8561,10.4711 54.8411,10.4259 54.8168,10.3731 54.837,10.3205 54.8765,10.288 54.8886,10.2441 54.9229)),((9.0379 56.8466,9.0301 56.8192,9.0045 56.7977,8.9589 56.8379,9.0379 56.8466)),((8.5642 56.7309,8.5429 56.7399,8.5481 56.7825,8.5866 56.7959,8.6488 56.8559,8.6349 56.8852,8.7358 56.8887,8.8171 56.9036,8.8293 56.9288,8.8676 56.9503,8.9076 56.946,8.9208 56.9161,8.8919 56.8657,8.879 56.8823,8.8425 56.8844,8.8288 56.8632,8.8528 56.8199,8.8747 56.8066,8.8432 56.7742,8.831 56.7408,8.7879 56.7191,8.7763 56.6953,8.6429 56.6687,8.6117 56.7068,8.5628 56.7028,8.5642 56.7309)),((8.4798 55.3488,8.4528 55.3408,8.4223 55.3551,8.3839 55.4065,8.328 55.4486,8.3859 55.4742,8.4099 55.4656,8.4055 55.4351,8.4522 55.4339,8.4798 55.3488)))&quot;</value>
                    <value>56.113</value>
                    <value>9.0960000000000001</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='39' y='-188' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{EC75316A-2F76-4C61-A67E-9C34DF0E2BAE}' />
    </worksheet>
    <worksheet name='regionwise comparision'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#b6992d' fontsize='20'>Region vise comparision</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Chapter2OnlineData_Copy3)' name='federated.07etjpg1jow89j11sz3eh19oru6n' />
          </datasources>
          <datasource-dependencies datasource='federated.07etjpg1jow89j11sz3eh19oru6n'>
            <column datatype='real' name='[Life Ladder]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[Region]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Life Ladder]' derivation='Avg' name='[avg:Life Ladder:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Region:nk]'>
            <groupfilter from='&quot;East Asia &amp; Pacific&quot;' function='range' level='[none:Region:nk]' to='&quot;Sub-Saharan Africa&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
                <format attr='shape' value='asterisk' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07etjpg1jow89j11sz3eh19oru6n].[avg:Life Ladder:qk]</rows>
        <cols>([federated.07etjpg1jow89j11sz3eh19oru6n].[none:Region:nk] * [federated.07etjpg1jow89j11sz3eh19oru6n].[none:Year:qk])</cols>
      </table>
      <simple-id uuid='{003116EF-EBAB-4972-BDBB-1A664251FC08}' />
    </worksheet>
    <worksheet name='top 5 countries with higgest ll'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#59a14f' fontsize='22'>TOP 5 COUNTRIES IN HAPPINESS LEVEL</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Chapter2OnlineData_Copy3)' name='federated.07etjpg1jow89j11sz3eh19oru6n' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.07etjpg1jow89j11sz3eh19oru6n'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Life Ladder]' role='measure' type='quantitative' />
            <column-instance column='[Life Ladder]' derivation='Avg' name='[avg:Life Ladder:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Life Ladder])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.07etjpg1jow89j11sz3eh19oru6n].[Longitude (generated)]' field-type='quantitative' max='9638130.3733947482' min='-8102794.205458859' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.07etjpg1jow89j11sz3eh19oru6n].[Latitude (generated)]' field-type='quantitative' max='10775509.93202962' min='663832.31806165352' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#c0c0c0' />
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]' />
              <size column='[federated.07etjpg1jow89j11sz3eh19oru6n].[avg:Life Ladder:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.07etjpg1jow89j11sz3eh19oru6n].[Latitude (generated)]</rows>
        <cols>[federated.07etjpg1jow89j11sz3eh19oru6n].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{31F26A2E-1F40-4997-BEE7-C62780958E7C}' />
    </worksheet>
    <worksheet name='usa vs canada'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#b6a674' fontsize='20'>USA VS CANADA</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Chapter2OnlineData_Copy3)' name='federated.07etjpg1jow89j11sz3eh19oru6n' />
          </datasources>
          <datasource-dependencies datasource='federated.07etjpg1jow89j11sz3eh19oru6n'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Life Ladder]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Life Ladder]' derivation='Avg' name='[avg:Life Ladder:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country Name:nk]' />
              <groupfilter function='union'>
                <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country Name:nk]' to='&quot;Cameroon&quot;' />
                <groupfilter from='&quot;Central African Republic&quot;' function='range' level='[none:Country Name:nk]' to='&quot;United Kingdom&quot;' />
                <groupfilter from='&quot;Uruguay&quot;' function='range' level='[none:Country Name:nk]' to='&quot;Zimbabwe&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Year:qk]' included-values='in-range'>
            <min>2007</min>
            <max>2018</max>
          </filter>
          <slices>
            <column>[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]</column>
            <column>[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Year:qk]' field-type='quantitative' max='2019' min='2008' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.07etjpg1jow89j11sz3eh19oru6n].[avg:Life Ladder:qk]</rows>
        <cols>[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{32DE59D6-69FC-4278-AAA4-82F7C8D3F02A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='51500' id='9' name='regionwise comparision' w='105300' x='200' y='50000'>
          <layout-cache minheight='259' minwidth='754' type-h='scalable' type-w='scalable' />
        </zone>
        <zone h='48250' id='10' name='top 5 countries with higgest ll' w='96500' x='3100' y='1875' />
        <zone h='14875' id='16' name='top 5 countries with higgest ll' pane-specification-id='0' param='[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]' type='color' w='14000' x='2700' y='37250' />
        <zone h='17375' id='15' name='top 5 countries with higgest ll' pane-specification-id='0' param='[federated.07etjpg1jow89j11sz3eh19oru6n].[avg:Life Ladder:qk]' type='size' w='14000' x='2200' y='20500' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='23' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='24' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='48250' id='10' is-fixed='true' name='top 5 countries with higgest ll' w='96500' x='3100' y='1875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14875' id='16' name='top 5 countries with higgest ll' pane-specification-id='0' param='[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]' type='color' w='14000' x='2700' y='37250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='17375' id='15' name='top 5 countries with higgest ll' pane-specification-id='0' param='[federated.07etjpg1jow89j11sz3eh19oru6n].[avg:Life Ladder:qk]' type='size' w='14000' x='2200' y='20500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51500' id='9' is-fixed='true' name='regionwise comparision' w='105300' x='200' y='50000'>
                  <layout-cache minheight='259' minwidth='754' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{03B2681C-0E68-406A-9D41-227439B538CB}' />
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='56000' id='3' name='usa vs canada' w='100700' x='1700' y='3750' />
        <zone h='24750' id='10' name='Confidence in internationalgov' pane-specification-id='0' param='[federated.07etjpg1jow89j11sz3eh19oru6n].[:Measure Names]' type='color' w='22300' x='-1100' y='66875' />
        <zone h='7750' id='8' name='usa vs canada' pane-specification-id='0' param='[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]' type='color' w='17900' x='78700' y='44750' />
        <zone h='38750' id='9' name='Confidence in internationalgov' w='36000' x='500' y='61125' />
        <zone h='36000' id='18' name='DELIVERY QUALITY' w='33300' x='39000' y='62250' />
        <zone h='35000' id='19' name='Perception of corruption' w='33300' x='72300' y='61875' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='22' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='23' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='56000' id='3' is-fixed='true' name='usa vs canada' w='100700' x='1700' y='3750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7750' id='8' name='usa vs canada' pane-specification-id='0' param='[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]' type='color' w='17900' x='78700' y='44750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38750' id='9' is-fixed='true' name='Confidence in internationalgov' w='36000' x='500' y='61125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='24750' id='10' name='Confidence in internationalgov' pane-specification-id='0' param='[federated.07etjpg1jow89j11sz3eh19oru6n].[:Measure Names]' type='color' w='22300' x='-1100' y='66875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35000' id='19' is-fixed='true' name='Perception of corruption' w='33300' x='72300' y='61875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36000' id='18' is-fixed='true' name='DELIVERY QUALITY' w='33300' x='39000' y='62250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{52AEAEC9-CF08-4B78-8D8E-BB91380BA3D6}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='regionwise comparision'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Region:nk]</field>
            <field>[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{857BB699-0025-45D0-A9EB-CA819FC2E123}' />
    </window>
    <window class='worksheet' name='usa vs canada'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]</field>
            <field>[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F9BD6BF2-A152-4BF8-A091-6C8157932C95}' />
    </window>
    <window class='worksheet' name='Confidence in internationalgov'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.07etjpg1jow89j11sz3eh19oru6n].[:Measure Names]</field>
            <field>[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{74A34A25-C766-4D10-B4E5-227AB67E4B34}' />
    </window>
    <window class='worksheet' name='DELIVERY QUALITY'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.07etjpg1jow89j11sz3eh19oru6n].[:Measure Names]</field>
            <field>[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0C0B282A-9549-4F18-87B3-0594C3F32452}' />
    </window>
    <window class='worksheet' name='Perception of corruption'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.07etjpg1jow89j11sz3eh19oru6n].[:Measure Names]</field>
            <field>[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0734F709-24A2-4B79-B536-8CB4ECCB1A7F}' />
    </window>
    <window class='worksheet' name='country name vs lifeladder'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.07etjpg1jow89j11sz3eh19oru6n].[avg:Life Ladder:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07etjpg1jow89j11sz3eh19oru6n].[avg:Life Ladder:qk]</field>
            <field>[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]</field>
            <field>[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{14215E9A-4ED2-4BFA-AFA3-4AE6FCCB9C8C}' />
    </window>
    <window class='worksheet' name='coutries with regions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]</field>
            <field>[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BB3BF8AC-D78C-45EC-BCF9-F384E8E81F4F}' />
    </window>
    <window class='worksheet' name='top 5 countries with higgest ll'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.07etjpg1jow89j11sz3eh19oru6n].[avg:Life Ladder:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='16' />
      </viewpoint>
      <simple-id uuid='{CE457906-CD4D-4D2C-B64D-5F450F1EB725}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3CCCA5B2-1568-4327-8693-11CBD4CB37D0}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='regionwise comparision'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='top 5 countries with higgest ll'>
          <zoom type='entire-view' />
          <highlight field='[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{31555998-1882-43DD-803C-1EC538A4C1A1}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Confidence in internationalgov'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.07etjpg1jow89j11sz3eh19oru6n].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='DELIVERY QUALITY'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.07etjpg1jow89j11sz3eh19oru6n].[sum:Delivery Quality:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]</field>
                    <field>[federated.07etjpg1jow89j11sz3eh19oru6n].[sum:Delivery Quality:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Canada&quot;</value>
                  <value>23.394153664509453</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Perception of corruption'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='usa vs canada'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.07etjpg1jow89j11sz3eh19oru6n].[none:Country Name:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='18' />
      <simple-id uuid='{B2E92A55-B1D0-434F-9FC8-4DBB1BEFCA9E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Confidence in internationalgov' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='DELIVERY QUALITY' width='192'>
      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
      yRlvsv8ClTraIOB1e2IAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      Hk98G/Uv/wbG4H6M1A71vWofiLY/8wbaP+6xX/7O2HYP2uhRjKH9aN4g3m0vwHfwh/Huey3G
      jvvwbHsBxtBtNBoNgsEgnuGDMLAfQ9fQjADG4H6ax/8STyCCERvtOUfd41/tZ71t+83NZvW/
      kfa2ba9fBogl15d2Q1iBfs5H0DZGGAfeiFPNYx37S7z7X0/tm21eOPiDH8PY/Qr08JX7tYVE
      Dc0fofbFX8f/qg+wGsshfh/BN32M5sLTeIYPonlDANhnvoz95GfxHn2HcsgSg55n5AiekSM4
      rSbBf/IJPKN3ovlCql/jnnehb7Bot9Nq0rz0MJ7Ro+q5adTaLE1sdEN9uaH5QujbX4zHMPC8
      6OdWfG/suK/ndXpyJ/4X/Rytak751Yg8IWyd/6XvazuprUNmaBXn+zqg3RRwrgKmaaq/bdt2
      GnPHnNp3Pu606kX1efnzP++UP//zHdfZtt35/8XvOcU/fp1jT37PqR//K6d+/K96tm/Viu0f
      q+zYlx5xWla553ikvfRlnf6SY/6Xo451+suqrXX6S075L3/KaVULjp2f2dBzd4+/H9zjaZpz
      jvmJu53q1/7fTet/I+2735UbTXPOcRxHvT978h+c8l/9C6cxd1y9v+5322o2HPvid51WveTU
      H/mkU/yfr3Valayay+pXf8upfu23nVa91G7XbPQcz/V41o22N03T6ZIBqjzwmb/lnvvvZ9d4
      /2So7rjORqNB64k/w3rys4R//C+Uidk60dZtew+8Ue3CTc23IkpntR1kvVE9Mp7u9o5dWXEC
      XE3/1zIej65dPgE6T5Nr6X8j7bvfVa/21qOf6v3+HAfqxY7vWsV5yp9+M97Db8V7+5tpnPs6
      +tDt1L/1MQKv+TCN819X/donPkf4nQ92vN9+72oznnWj7YvFYvcJ0HQe+cdHndnZuTUpp5vS
      ZDfphnsXvl5UfyPtKjfaeFY7Adzo9f7+//bu57dtMowD+LdOspKOdEmrbRyGulTAVE3aNLig
      Abtx4Yr4A5C48ddw48CBK1w5TDvshoTENKDVAHVT1zSznZ914jpx7Dh+Xw5pSuwasEP9K34+
      x+rp28ev8/SN7dfvO39umaFxc/d7PukenI4Af4/CtnLIRz99zW3l8OxnzBxO40YqN378ik8a
      e458ktI3rstkC8/3nkHuBN8K55/+i+erH6H46TfIVz8M3CaJzr99jxdKb4AzC9bed+DDFvJb
      9x2jmVC5Ob0+On25BZheo+S37oNz++zWbRI5xogXf+zh8uY1TKyLW9Z3fn43aOJcagnFCtY+
      +9bzpsZ//t5sDn8COUaA6jt3sLGeR2l9Oba/IRcr6Id/JqkffsBVAPWD3yE1B2jIclz5EBIp
      RwFs33oXV14boXI1uRVLyEVyXQTreCUOoJ8o8WRDSMRcBbCGL778HNc3K/FkQ0jEHHeB/tx9
      io46xMa1G3HlQ0ikHCPAzt17WCtexuaV808sx0MVcoe+GpHl4igAw1AxVMewJu71GRl++W0X
      siRGmBoh4XMUwPNnv0JsNDBm7pmWAt7/4AHeuhnuriSERM1xDXCjehu6vg/T8N6bqlwuR5IU
      IVFxjAAtUcQYQEOmV+ZINjhGgJ2772EnrkwIiYHnS5PdTjfqPAiJhasADDz64SEePXyMi5sP
      SkhyuQpgBYahY2u7uuAiH4Ski6sA8iismODF1xH+TrSExM9RAENVwcqldVzdpNXDSDY4CuDp
      z08wUHpYKRbjyoeQSDlugz74+BMAgGl6PwgjZNl43gZdXV2NOg9CYrE0y6MTsgjfBSDVX0Ju
      0QMyslx8L7VVLm9AMxkYY7Bt+2xvMMaY733CgsQGiZ/lE1b7ac5n0XMVND6tfeO7AGq1Q1Su
      vwlBEJDL5c6WnQuyZF1Yy+HN8knCcntJy2fRcxU0PrV947fB23fu+f7jhKQFXQSTTKMCIJlG
      BUAyjQqAZBoVAMk0KgCSaVQAJNOoAEimUQGQTPNdAHL9EK3jfpi5EBI53wVgCwWMdS3MXAiJ
      nO8CsEYauHApzFwIiZzvyXDbb0/XjGOMwbKs6SbDmE4pzeVyvtoIEhskXtf1UNtPcz6zXMLO
      J619439+6SlBEFAoFM52H09CAQBAqVRKRKcmMZ9FzlXQ+LT2zf++CyQI/psIEkvx6YpPUi5B
      4hcugE5TgqabaMoSbGZDlGQYAxUHtVeOuJHWR7OjoN9tYWhY6PV6AGcQRcmzXc94ZuHF/j5M
      974dM5yjXqud5tGEZQzQ6vagdJrnXuM8bjegDg00JBGMc/T6Kiamjmbbe/cbr3iv45xnWwaO
      RBnj0QBtRYWqdHCim5COXqKv6XORHOJRDeOJBVFqwrZMnAxG0PpdqIOR14F6xnsd57zhSQ+t
      4z7U4zYGozGasojJ5HyfsomJWl2CqWtoKyp0rQ/TBloNCWObL2Xf/AV2/QeQTOucDQAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Perception of corruption' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='country name vs lifeladder' width='192'>
      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
      ZCgOsPf4f9Jn6Ufd02TYAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='coutries with regions' width='192'>
      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
      OptTS9qVAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='regionwise comparision' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='top 5 countries with higgest ll' width='192'>
      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
      deE/AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='usa vs canada' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
